{# @var services \Shopware\Core\Framework\Script\ServiceStubs #}
{% set configValue = services.config.app('priceNetDataLayer') %}
{# @var salesChannelContext \Shopware\Core\System\SalesChannel\SalesChannelContext #}
{% set salesChannelContext = hook.salesChannelContext %}
{# @var page \Shopware\Storefront\Page\Product\ProductPage #}
{% set page = hook.page %}
{# @var product \Shopware\Core\Content\Product\SalesChannel\SalesChannelProductEntity #}
{% set product = page.product %}

{# Inline Preisberechnung (fix net/gross and avoid wrong tier selection) #}
{% set calculatedPrice = product.calculatedPrice %}
{% set basePrice = calculatedPrice.unitPrice %}
{% if configValue == true and salesChannelContext and salesChannelContext.taxState == 'gross' and product.tax and product.tax.taxRate %}
    {% set basePrice = (basePrice / (1 + (product.tax.taxRate / 100)))|round(2) %}
{% endif %}
{# Build price tiers for correct add_to_cart tier selection #}
{% set priceTiers = [] %}
{% if product.calculatedPrices and product.calculatedPrices|length > 0 %}
    {% for price in product.calculatedPrices %}
        {% set tierPrice = price.unitPrice %}
        {% if configValue == true and salesChannelContext and salesChannelContext.taxState == 'gross' and product.tax and product.tax.taxRate %}
            {% set tierPrice = (tierPrice / (1 + (product.tax.taxRate / 100)))|round(2) %}
        {% endif %}
        {% set priceTiers = priceTiers|merge([{
            quantityEnd: (price.quantity is not null ? price.quantity|intval : null),
            price: tierPrice
        }]) %}
    {% endfor %}
{% endif %}

{% do page.addArrayExtension('acrisTagManagerAppData', {
    event: 'product-quick-view-widget-loaded',
    data: {
        context: {
            currency: salesChannelContext.currency.isoCode,
        },
        product: {
            id: product.id,
            number: product.productNumber,
            name: product.translated.name|default(product.name),
            price: basePrice,
            priceTiers: priceTiers,
            currency: salesChannelContext.currency.isoCode,
            quantity: product.purchaseSteps|default(1)
        }
    }
}) %}
